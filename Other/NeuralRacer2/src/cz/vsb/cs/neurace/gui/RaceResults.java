package cz.vsb.cs.neurace.gui;

import java.awt.Color;
import java.util.IllegalFormatException;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JTextPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;

/**
 * Okno s výsledky závodu.
 * @author Petr Hamalčík
 */
public class RaceResults extends javax.swing.JDialog {

    boolean lastRace = false;
    
    /** Creates new form ResultsFrame */
    public RaceResults(JFrame frame, boolean showChampionship, boolean lastRace) {
        super(frame, Text.getString("Race_results"), true);
        this.lastRace = lastRace;
        initComponents();
        if(this.lastRace) {
            champLabel.setText(Text.getString("Championship_final"));
        }
        if(!showChampionship) {
            this.remove(jTabbedPane1);
            this.add(mainPanel);
        }
        setLocationRelativeTo(frame);
        
    }

    public void setData(Object[][] results) {
        DefaultTableModel model = (DefaultTableModel) resultsTable.getModel();
        String[] columnNames = new String[]{Text.getString("Position"),Text.getString("Racer"),
        Text.getString("Car"),Text.getString("Time"),Text.getString("Best_lap"),Text.getString("Points")};
        model.setDataVector(results, columnNames);
        this.repaint();
    }
    
    public void setChampData(Object[][] data) {
        DefaultTableModel model = (DefaultTableModel) champTable.getModel();
        String[] columnNames = new String[]{Text.getString("Position"),Text.getString("Racer"),Text.getString("Points")};
        model.setDataVector(data, columnNames);
        champTable.getColumnModel().getColumn(0).setPreferredWidth(100);
        champTable.getColumnModel().getColumn(0).setMaxWidth(100);
        champTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        champTable.getColumnModel().getColumn(2).setMaxWidth(100);
        this.repaint();
    }
    
    public void setMessages(List<String> messages) {
        for(String msg:messages) {
            if(msg.equals("db error")) {
               append(messagePane, Text.getString("db_update_error") + "\n", Color.RED, true); 
            }
            else if(msg.contains("best time")) {
                String[] record = msg.split(":");
                try {
                    if(record[1].equals("driver best time")) {
                        append(messagePane, String.format(Text.getString("driver_best_time"), record[0]) + "\n", Color.BLACK, false);
                    }
                    else  {
                        if(record[1].equals("1")) { record[1] = ""; }
                        else if(record[1].equals("2")) { record[1] = Text.getString("second"); }
                        else if(record[1].equals("3")) { record[1] = Text.getString("third"); }
                        append(messagePane, String.format(Text.getString("track_best_time"), record[0], record[1]) + "\n", Color.BLACK, true);
                    }
                }
                catch(IllegalFormatException  e) {
                    System.err.printf(e.getMessage());
                    //e.printStackTrace();
                }
                catch(NullPointerException  e) {
                    System.err.printf(e.getMessage());
                    //e.printStackTrace();
                }
            }
            else if(msg.equals("not ranked")) {
                append(messagePane, Text.getString("not_ranked") + "\n", Color.BLACK, true);
            }
            else {
                append(messagePane, msg + "\n", Color.BLACK, false);
            }
        }
        messagePane.repaint();
    }
    
    public void append(JTextPane t, String s, Color c, boolean bold) { // better implementation--uses StyleContext
            //StyleContext sc = StyleContext.getDefaultStyleContext();
            SimpleAttributeSet aset = new SimpleAttributeSet();
            StyleConstants.setForeground(aset, c);
            StyleConstants.setBold(aset, bold);

            int len = t.getDocument().getLength(); // same value as getText().length();
            t.setCaretPosition(len);  // place caret at the end (with no selection)
            t.setCharacterAttributes(aset, false);
            t.replaceSelection(s); // there is no selection, so inserts at caret
        }

 
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        mainPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultsTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        messagePane = new javax.swing.JTextPane(){
            public void append(Color c, String s) { // better implementation--uses StyleContext
                StyleContext sc = StyleContext.getDefaultStyleContext();
                AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY,
                    StyleConstants.Foreground, c);

                int len = getDocument().getLength(); // same value as getText().length();
                setCaretPosition(len);  // place caret at the end (with no selection)
                setCharacterAttributes(aset, false);
                replaceSelection(s); // there is no selection, so inserts at caret
            }
        };
        jPanel3 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        champPanel = new javax.swing.JPanel();
        champLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        champTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        okButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        setMinimumSize(jTabbedPane1.getSize());

        jTabbedPane1.setMinimumSize(getPreferredSize());
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(759, 540));

        mainPanel.setPreferredSize(new java.awt.Dimension(754, 450));

        resultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Position", "Racer", "Car", "Time", "Best lap", "Points"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resultsTable.setRowHeight(40);
        jScrollPane1.setViewportView(resultsTable);

        jScrollPane2.setViewportView(messagePane);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Text"); // NOI18N
        okButton.setText(bundle.getString("Ok")); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        jPanel3.add(okButton);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(Text.getString("Race_results")); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(Text.getString("Race"), mainPanel); // NOI18N

        champLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        champLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        champLabel.setText(Text.getString("Championship")); // NOI18N
        champLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        champTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Position", "Driver", "Points"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        champTable.setInheritsPopupMenu(true);
        jScrollPane4.setViewportView(champTable);
        champTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        champTable.getColumnModel().getColumn(0).setMaxWidth(100);
        champTable.getColumnModel().getColumn(0).setHeaderValue(Text.getString("Position")); // NOI18N
        champTable.getColumnModel().getColumn(1).setHeaderValue(Text.getString("Racer")); // NOI18N
        champTable.getColumnModel().getColumn(2).setPreferredWidth(50);
        champTable.getColumnModel().getColumn(2).setMaxWidth(100);
        champTable.getColumnModel().getColumn(2).setHeaderValue(Text.getString("Points")); // NOI18N

        okButton1.setText(bundle.getString("Ok")); // NOI18N
        okButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(okButton1);

        javax.swing.GroupLayout champPanelLayout = new javax.swing.GroupLayout(champPanel);
        champPanel.setLayout(champPanelLayout);
        champPanelLayout.setHorizontalGroup(
            champPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(champPanelLayout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addGroup(champPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                    .addComponent(champLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(117, Short.MAX_VALUE))
        );
        champPanelLayout.setVerticalGroup(
            champPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(champPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(champLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );

        jTabbedPane1.addTab(Text.getString("Championship"), champPanel); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        if(lastRace) {
            this.jTabbedPane1.setSelectedComponent(champPanel);
        }
        else {
            this.dispose();
        }
}//GEN-LAST:event_okButtonActionPerformed

    private void okButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_okButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel champLabel;
    private javax.swing.JPanel champPanel;
    private javax.swing.JTable champTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextPane messagePane;
    private javax.swing.JButton okButton;
    private javax.swing.JButton okButton1;
    private javax.swing.JTable resultsTable;
    // End of variables declaration//GEN-END:variables

}
